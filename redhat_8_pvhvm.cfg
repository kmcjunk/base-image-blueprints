cmdline

# Install from a friendly mirror and add updates
cdrom


# Language and keyboard setup
lang en_US.UTF-8
keyboard us

# Configure DHCP networking w/optional IPv6, firewall on
network --onboot yes --device eth0 --bootproto dhcp --ipv6 auto --hostname localhost
firewall --service=ssh

# Set timezone
timezone --utc Etc/UTC

# Authentication
rootpw --plaintext novaagentneedsunlockedrootaccountsowedeletepasswordinpost
authconfig --enableshadow --passalgo=sha512

# SELinux
selinux --permissive

# Services running at boot
# services --enabled network,sshd,rc-local
services --enabled sshd,rc-local
#,NetworkManager-wait-online
services --disabled sendmail

# Disable anything graphical
skipx
text

# Setup the disk
zerombr
clearpart --all --initlabel
#part biosboot --size=1
part / --fstype=ext4 --grow --size=1024
bootloader --timeout=1 --append="root=/dev/xvda1"

# Shutdown when the kickstart is done
shutdown

# Minimal package set
%packages
@base
kernel
gcc
python3
rsync
tar
wget
yum-rhn-plugin
rhn-client-tools
rhn-setup
gdisk
curl
iptables-services
# cloud-utils
cloud-utils-growpart
sos
xz
xz-libs
# all below are required for cloud-init
platform-python-devel
python3-requests
python3-prettytable
python3-netifaces
qemu-img
policycoreutils-python-utils
python3-jsonpatch
# nova-agent   TODO: Readd once nova-agent is in upstream repos
cloud-init
%end

%post --log=/var/log/post_install.log
# setup systemd to boot to the right runlevel
echo -n "Setting default runlevel to multiuser text mode"
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target

# If you want to remove rsyslog and just use journald, remove this!
echo -n "Disabling persistent journal"
rmdir /var/log/journal/

# this is installed by default but we don't need it in virt
echo "Removing linux-firmware package."
yum -C -y remove linux-firmware

# Non-firewalld-firewall
echo -n "Writing static firewall"
cat <<EOF > /etc/sysconfig/iptables
# Simple static firewall loaded by iptables.service. Replace
# this with your own custom rules, run lokkit, or switch to
# shorewall or firewalld as your needs dictate.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
EOF

# ip6tables config
cat > /etc/sysconfig/ip6tables <<'EOF'
# Simple static firewall loaded by iptables.service. Replace
# this with your own custom rules, run lokkit, or switch to
# shorewall or firewalld as your needs dictate.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p ipv6-icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp6-adm-prohibited
-A FORWARD -j REJECT --reject-with icmp6-adm-prohibited
COMMIT
EOF

echo -n "Getty fixes"
# although we want console output going to the serial console, we don't
# actually have the opportunity to login there. FIX.
# we don't really need to auto-spawn _any_ gettys.
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf

echo -n "Network fixes"
# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
NETWORKING_IPV6=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
echo -n > /etc/udev/rules.d/70-persistent-net.rules
echo -n > /lib/udev/rules.d/75-persistent-net-generator.rules
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# Use none scheduler to minimize CPU cycles
cat > /etc/udev/rules.d/88-rax-ioscheduler.rules << EOF
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/scheduler}="none"
ACTION=="add|change", KERNEL=="xvd[a-z]", ATTR{queue/scheduler}="none"
EOF

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="static"
ONBOOT="yes"
TYPE="Ethernet"
IPV6INIT=yes
EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

# Because memory is scarce resource in most cloud/virt environments,
# and because this impedes forensics, we are differing from the Fedora
# default of having /tmp on tmpfs.
echo "Disabling tmpfs for /tmp."
/usr/bin/systemctl mask tmp.mount

# tmp tmp
mkdir /tmp/tmp
cd /tmp/tmp

# install xen tools
yum install http://KICK_HOST/xstools/7.0/xe-guest-utilities-7.0.0-24.x86_64.rpm -y
yum install http://KICK_HOST/xstools/7.0/xe-guest-utilities-xenstore-7.0.0-24.x86_64.rpm -y

# Ensure the agent starts on boot
# systemctl enable nova-agent   TODO: Readd once nova-agent is in upstream repos
systemctl enable xe-linux-distribution

# system tweaks go in a custom tuned profile
mkdir -p /etc/tuned/rax-cloud
cat > /etc/tuned/rax-cloud/tuned.conf<<'EOF'
#
# tuned configuration for Rackspace Cloud
#

[main]
include=throughput-performance

[sysctl]
net.ipv4.conf.eth0.arp_notify = 1
net.ipv4.tcp_rmem = 4096 87380 33554432
net.ipv4.tcp_wmem = 4096 65536 33554432
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_sack = 1
net.ipv6.conf.eth0.disable_ipv6 = 0
net.ipv6.conf.eth1.disable_ipv6 = 0
net.core.rmem_max = 33554432
net.core.wmem_max = 33554432
vm.swappiness = 0
vm.dirty_ratio = 30
EOF
echo "rax-cloud" > /etc/tuned/active_profile

# our fstab is fonky
cat > /etc/fstab <<'EOF'
/dev/xvda1		/                       ext4     defaults,noatime 1 1
EOF

# update all
yum -y update

# our cloud-init config
cat > /etc/cloud/cloud.cfg.d/10_rackspace.cfg <<'EOF'
datasource_list: [ ConfigDrive, None ]
disable_root: False
ssh_pwauth: True
ssh_deletekeys: False
resize_rootfs: noblock
preserve_hostname: true
manage_etc_hosts: localhost
network:
  config: disabled
growpart:
  mode: auto
  devices: ['/']
system_info:
  distro: rhel

cloud_config_modules:
  - disk_setup
  - mounts
  - ssh-import-id
  - locale
  - set-passwords
  - yum-add-repo
  - package-update-upgrade-install
  - timezone
  - puppet
  - chef
  - salt-minion
  - mcollective
  - disable-ec2-metadata
  - runcmd
  - byobu
EOF

# make sure repos are empty for rhel
find /etc/yum.repos.d -type f ! -name "*epel*" -delete

# force grub to use generic disk labels, bootloader above does not do this
cat >> /etc/sysconfig/grub <<'EOF'
GRUB_DISABLE_LINUX_UUID="true"
EOF
grub2-mkconfig

# package need for our RHN registration to work
wget http://dfw.rhn.rackspace.com/pub/rhn-org-trusted-ssl-cert-1.0-1.noarch.rpm
rpm -Uvh rhn-org-trusted-ssl-cert*

https://rpmdev.lp.rackspace.com/activation/rackspace-rhui-client-ospc-latest-8.noarch.rpm
rpm -Uvh *rhui*.rpm

# fix dns as NetworkManager conflicts with Nova-Agent
# /usr/bin/systemctl mask NetworkManager-wait-online.service
# /usr/bin/systemctl mask NetworkManager.service

# clean up
passwd -d root
yum clean all
truncate -c -s 0 /var/log/yum.log
echo "" > /etc/machine-id
rm -f /root/anaconda-ks.cfg
rm -f /etc/ssh/ssh_host_*
rm -f /etc/resolv.conf
touch /etc/resolv.conf
rm -f /etc/sysconfig/network-scripts/ifcfg-eth0
rm -f /root/.bash_history
rm -f /root/.nano_history
rm -f /root/.lesshst
rm -f /root/.ssh/known_hosts
rm -rf /tmp/tmp
rm -rf /var/log/anaconda/
find /var/log -type f -exec truncate -s0 {} \;
find /tmp -type f -delete
find /root -type f ! -iname ".*" -delete
/sbin/fixfiles -f -F relabel
%end
